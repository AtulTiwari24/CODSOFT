A GUI Based To-Do List

# "Main" File
import functions
import PySimpleGUI as Sg
import time

Sg.theme("Black")
clock = Sg.Text('', key='clock')
label = Sg.Text("Type in a To-do:")
input_box = Sg.InputText(tooltip="Enter a Todo:", key="todo")
add_button = Sg.Button("Add")
list_box = Sg.Listbox(values=functions.get_todo(), key='todos',
                      enable_events=True,
                      size=(45, 10))

edit_button = Sg.Button("Edit")
delete_button = Sg.Button("Delete")
exit_button = Sg.Button("Exit")

window = Sg.Window("My To-do App",
                   layout=[[clock],
                           [label], [input_box, add_button],
                           [list_box, edit_button, delete_button,
                           exit_button]],
                   font=("helvetica", 20))
while True:

    event, values = window.read(timeout=200)
    window['clock'].update(value=time.strftime("%b %D, %Y %H:%M:%S"))
    match event:
        case "Add":
            todos = functions.get_todo()
            new_todos = values["todo"] + "\n"
            todos.append(new_todos)
            functions.write_todo(todos)
            window['todos'].update(values=todos)

        case "Edit":
            try:

                todo_to_edit = values['todos'][0]
                new_todos = values['todo']
                todos = functions.get_todo()
                index = todos.index(todo_to_edit)
                todos[index] = new_todos
                functions.write_todo(todos)
                window['todos'].update(values=todos)
            except IndexError:
                Sg.popup("Please select a item first!!")

        case "Delete":
            try:

                todo_to_delete = values["todos"][0]
                todos = functions.get_todo()
                todos.remove(todo_to_delete)
                window["todos"].update(values=todos)
                window['todo'].update(value='')
            except IndexError:
                Sg.popup("Please select a item first!!")

        case "Exit":
            break

        case 'todos':
            window['todo'].update(value=values['todos'][0])

        case Sg.WIN_CLOSED:
            break
window.close()

# "Functions" File

FILEPATH = "file.txt"


def get_todo(filepath=FILEPATH):
    """" Read the text file and return the list of
    to-do items
    """
    with open(filepath, "r") as file_local:
        todos_local = file_local.readlines()
        return todos_local


def write_todo(todos_args, filepath=FILEPATH):
    """write the to-do items in the text file."""
    with open(filepath, "w") as file:
        file.writelines(todos_args)


if __name__ == "__main__":
    print("Hello")
    print(get_todo())


